 FUNCTION_BLOCK "OutputTransfer "  
{S7_Optimized_Access :='TRUE'}
VERSION : 0.1
VAR
M2101:"#YF#OutputTransfer";
M2102:"#YF#OutputTransfer";
M2103:"#YF#OutputTransfer";
M2104:"#YF#OutputTransfer";
M2105:"#YF#OutputTransfer";
M2106:"#YF#OutputTransfer";
M2107:"#YF#OutputTransfer";
M2108:"#YF#OutputTransfer";
M2109:"#YF#OutputTransfer";
M2110:"#YF#OutputTransfer";
M2111:"#YF#OutputTransfer";
M2112:"#YF#OutputTransfer";
M2113:"#YF#OutputTransfer";
M2114:"#YF#OutputTransfer";
M2115:"#YF#OutputTransfer";
M2134:"#YF#OutputTransfer";
M2116:"#YF#OutputTransfer";
M2135:"#YF#OutputTransfer";
M01:"#YF#OutputTransfer";
M2117:"#YF#OutputTransfer";
M2118:"#YF#OutputTransfer";
M2119:"#YF#OutputTransfer";
M2120:"#YF#OutputTransfer";
M2121:"#YF#OutputTransfer";
M2122:"#YF#OutputTransfer";
M2123:"#YF#OutputTransfer";
M2124:"#YF#OutputTransfer";
M2125:"#YF#OutputTransfer";
M2126:"#YF#OutputTransfer";
M2127:"#YF#OutputTransfer";
M2128:"#YF#OutputTransfer";
M2129:"#YF#OutputTransfer";
M2130:"#YF#OutputTransfer";
M2131:"#YF#OutputTransfer";
M2132:"#YF#OutputTransfer";
M2133:"#YF#OutputTransfer";
M02:"#YF#OutputTransfer";
MLCP02:"#YF#OutputTransfer";
END_VAR
BEGIN
//2101输出信号映射;
#M2101(
M_ID:=2101,
M_ID_Offset:=2100,
FW:=%Q60.0,
BW:=%Q60.1);
//2102输出信号映射;
#M2102(
M_ID:=2102,
M_ID_Offset:=2100,
FW:=%Q60.2,
BW:=%Q60.3);
//2103输出信号映射;
#M2103(
M_ID:=2103,
M_ID_Offset:=2100,
FW:=%Q60.4,
BW:=%Q60.5);
//2104输出信号映射;
#M2104(
M_ID:=2104,
M_ID_Offset:=2100,
FW:=%Q60.6,
BW:=%Q60.7);
//2105输出信号映射;
#M2105(
M_ID:=2105,
M_ID_Offset:=2100,
FW:=%Q61.0,
BW:=%Q61.1,
YV1:=%Q61.2,
YV2:=%Q61.3);
//2106输出信号映射;
#M2106(
M_ID:=2106,
M_ID_Offset:=2100,
FW:=%Q62.0,
BW:=%Q62.1);
//2107输出信号映射;
#M2107(
M_ID:=2107,
M_ID_Offset:=2100,
FW:=%Q62.2,
BW:=%Q62.3);
//2108输出信号映射;
#M2108(
M_ID:=2108,
M_ID_Offset:=2100,
FW:=%Q62.4,
BW:=%Q62.5);
//2109输出信号映射;
#M2109(
M_ID:=2109,
M_ID_Offset:=2100,
FW:=%Q62.6,
BW:=%Q62.7);
//2110输出信号映射;
#M2110(
M_ID:=2110,
M_ID_Offset:=2100,
FW:=%Q63.0,
BW:=%Q63.1,
YV1:=%Q63.3);
//2111输出信号映射;
#M2111(
M_ID:=2111,
M_ID_Offset:=2100,
FW:=%Q64.0,
BW:=%Q64.1);
//2112输出信号映射;
#M2112(
M_ID:=2112,
M_ID_Offset:=2100,
FW:=%Q64.3,
BW:=%Q64.4,
Reset:=%Q64.2);
//2113输出信号映射;
#M2113(
M_ID:=2113,
M_ID_Offset:=2100,
FW:=%Q64.7,
BW:=%Q65.0,
YV1:=%Q65.2,
YV2:=%Q65.3,
Reset:=%Q64.6);
//2114输出信号映射;
#M2114(
M_ID:=2114,
M_ID_Offset:=2100,
YV1:=%Q65.4,
YV2:=%Q65.5);
//2115输出信号映射;
#M2115(
M_ID:=2115,
M_ID_Offset:=2100,
FW:=%Q66.0);
//2134输出信号映射;
#M2134(
M_ID:=2134,
M_ID_Offset:=2100,
YV1:=%Q66.1,
YV2:=%Q66.2);
//2116输出信号映射;
#M2116(
M_ID:=2116,
M_ID_Offset:=2100,
FW:=%Q66.3,
YV1:=%Q66.4,
YV2:=%Q66.5);
//2135输出信号映射;
#M2135(
M_ID:=2135,
M_ID_Offset:=2100,
FW:=%Q65.6,
BW:=%Q65.7);
//01输出信号映射;
#M01(
M_ID:=01,
M_ID_Offset:=2100);
//2117输出信号映射;
#M2117(
M_ID:=2117,
M_ID_Offset:=2100,
FW:=%Q66.6);
//2118输出信号映射;
#M2118(
M_ID:=2118,
M_ID_Offset:=2100,
FW:=%Q80.0,
YV1:=%Q80.2);
//2119输出信号映射;
#M2119(
M_ID:=2119,
M_ID_Offset:=2100,
FW:=%Q80.3);
//2120输出信号映射;
#M2120(
M_ID:=2120,
M_ID_Offset:=2100,
BW:=%Q80.4);
//2121输出信号映射;
#M2121(
M_ID:=2121,
M_ID_Offset:=2100,
Reset:=%Q81.0);
//2122输出信号映射;
#M2122(
M_ID:=2122,
M_ID_Offset:=2100,
FW:=%Q82.1,
BW:=%Q82.2,
Reset:=%Q82.0);
//2123输出信号映射;
#M2123(
M_ID:=2123,
M_ID_Offset:=2100,
FW:=%Q82.4);
//2124输出信号映射;
#M2124(
M_ID:=2124,
M_ID_Offset:=2100,
FW:=%Q83.5,
BW:=%Q83.6,
YV1:=%Q82.7,
Reset:=%Q83.4);
//2125输出信号映射;
#M2125(
M_ID:=2125,
M_ID_Offset:=2100,
FW:=%Q83.0);
//2126输出信号映射;
#M2126(
M_ID:=2126,
M_ID_Offset:=2100,
BW:=%Q83.1,
YV1:=%Q83.3);
//2127输出信号映射;
#M2127(
M_ID:=2127,
M_ID_Offset:=2100,
FW:=%Q84.1,
BW:=%Q84.2,
Reset:=%Q84.0);
//2128输出信号映射;
#M2128(
M_ID:=2128,
M_ID_Offset:=2100,
FW:=%Q84.5,
BW:=%Q84.6,
YV1:=%Q85.0,
YV2:=%Q85.1,
Reset:=%Q84.4);
//2129输出信号映射;
#M2129(
M_ID:=2129,
M_ID_Offset:=2100,
YV1:=%Q85.2,
YV2:=%Q85.3);
//2130输出信号映射;
#M2130(
M_ID:=2130,
M_ID_Offset:=2100,
FW:=%Q85.4,
BW:=%Q85.5);
//2131输出信号映射;
#M2131(
M_ID:=2131,
M_ID_Offset:=2100,
FW:=%Q85.6,
BW:=%Q85.7);
//2132输出信号映射;
#M2132(
M_ID:=2132,
M_ID_Offset:=2100,
FW:=%Q86.0,
BW:=%Q86.1);
//2133输出信号映射;
#M2133(
M_ID:=2133,
M_ID_Offset:=2100,
FW:=%Q86.2,
BW:=%Q86.3);
//02输出信号映射;
#M02(
M_ID:=02,
M_ID_Offset:=2100);
//LCP02输出信号映射;
#MLCP02(
M_ID:=LCP02,
M_ID_Offset:=2100);

END_FUNCTION_BLOCK
